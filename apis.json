{
  "openapi": "3.0.4",
  "info": {
    "title": "TCO.BiddingApp.Web",
    "version": "v1"
  },
  "paths": {
    "/api/Approval/{reportId}/approvers": {
      "get": {
        "tags": [
          "Approval"
        ],
        "summary": "Get approvers for bidding report",
        "description": "Returns the list of approvers assigned to the specified bidding report in display order. If isExceptionReport=true, approvers for the exception report approval flow are returned.",
        "operationId": "Approval_GetApprovers",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isExceptionReport",
            "in": "query",
            "description": "Set to true to retrieve approvers for the exception report approval flow.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportApproversDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportApproversDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportApproversDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Approval"
        ],
        "summary": "Set approvers for bidding report",
        "description": "Assigns a list of approvers to the specified bidding report, replacing any existing approvers.",
        "operationId": "Approval_SetApprovers",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SetApproversDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SetApproversDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SetApproversDto"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Approval/{reportId}/approval-flow/start": {
      "post": {
        "tags": [
          "Approval"
        ],
        "summary": "Start approval flow",
        "description": "Transitions the bidding report to PendingApproval and sends notifications to approvers.",
        "operationId": "Approval_StartApprovalFlow",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Approval/{reportId}/approval-flow/approve": {
      "post": {
        "tags": [
          "Approval"
        ],
        "summary": "Approve bidding report step",
        "description": "Registers the current approver's approval. If all required approvers have approved, the report transitions to Ð¡ompleted status.",
        "operationId": "Approval_Approve",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Approval/{reportId}/approval-flow/reject": {
      "post": {
        "tags": [
          "Approval"
        ],
        "summary": "Reject bidding report step",
        "description": "Registers the current approver's rejection. The bidding report transitions to Active status and the approval flow is stopped.",
        "operationId": "Approval_Reject",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Approval/{reportId}/approval-flow/rollback": {
      "post": {
        "tags": [
          "Approval"
        ],
        "summary": "Rollback bidding report approval flow",
        "description": "Transitions the bidding report to Active status, records the coordinator's rollback comment, and stops the current approval process.",
        "operationId": "Approval_Rollback",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/AribaProposals/proposals": {
      "get": {
        "tags": [
          "AribaProposals"
        ],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AribaProposalDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AribaProposalDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AribaProposalDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingData/activeBiddingReport": {
      "put": {
        "tags": [
          "Bidding Data"
        ],
        "summary": "Edit active bidding report",
        "description": "Edit active bidding report. Also changes status that depends on final award volume value. ",
        "operationId": "active_bidding_report",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingDataForActiveReportCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingDataForActiveReportCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingDataForActiveReportCommand"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingData/status": {
      "put": {
        "tags": [
          "Bidding Data"
        ],
        "summary": "Edit status of active bidding report",
        "description": "Edit status active bidding report.",
        "operationId": "Change_final_award_volume",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingDataStatusCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingDataStatusCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingDataStatusCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingData/exceptionReport": {
      "put": {
        "tags": [
          "Bidding Data"
        ],
        "summary": "Edit exception report",
        "description": "Edit exception report. Also changes status that depends on final award volume value. ",
        "operationId": "exception_report",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingDataForExceptionReportCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingDataForExceptionReportCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingDataForExceptionReportCommand"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingHistoryAnalysis/history-analysis": {
      "put": {
        "tags": [
          "Bidding History Analysis"
        ],
        "summary": "Batch update history analysis rows",
        "description": "Updates AdditionalVolumePR, AdditionalVolumeBT, Comments for multiple BiddingHistoryAnalysis entries belonging to a single bidding report.",
        "operationId": "Batch_Update_Bidding_History_Analysis",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingHistoryAnalysisCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingHistoryAnalysisCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingHistoryAnalysisCommand"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/BiddingHistoryAnalysis/status": {
      "put": {
        "tags": [
          "Bidding History Analysis"
        ],
        "summary": "Edit status of history analysis row",
        "description": "Edits status of a single history analysis row and updates its templated comment.",
        "operationId": "Update_History_Analysis_Status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingHistoryAnalysisStatusCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingHistoryAnalysisStatusCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBiddingHistoryAnalysisStatusCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingReports": {
      "get": {
        "tags": [
          "BiddingReports"
        ],
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "year",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BiddingReportDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BiddingReportDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BiddingReportDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bidding Report"
        ],
        "summary": "Create bidding report",
        "description": "Creates bidding report with new status",
        "operationId": "Create_Bidding_Report",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBiddingReportCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBiddingReportCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBiddingReportCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BiddingReportDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BiddingReportDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BiddingReportDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingReports/{id}": {
      "get": {
        "tags": [
          "BiddingReports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BiddingReportDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BiddingReportDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BiddingReportDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BiddingReports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/BiddingReports/{id}/history": {
      "get": {
        "tags": [
          "BiddingReports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BiddingHistoryAnalysisDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BiddingHistoryAnalysisDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BiddingHistoryAnalysisDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingReports/active/details": {
      "get": {
        "tags": [
          "BiddingReports"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBiddingReportDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBiddingReportDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBiddingReportDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingReports/{id}/details": {
      "get": {
        "tags": [
          "BiddingReports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isExceptionReport",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBiddingReportDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBiddingReportDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBiddingReportDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingReports/{id}/summary": {
      "get": {
        "tags": [
          "BiddingReports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BiddingReportSummaryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BiddingReportSummaryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BiddingReportSummaryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingReports/shipments": {
      "put": {
        "tags": [
          "Bidding Report"
        ],
        "summary": "Analyze bidding report",
        "description": "Gets shipments and creates history analysis. Changes report status to \"History Analyzed\". ",
        "operationId": "Analyze_Shipments_and_History",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyzeShipmentsAndHistoryCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyzeShipmentsAndHistoryCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyzeShipmentsAndHistoryCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingReports/proposals": {
      "put": {
        "tags": [
          "Bidding Report"
        ],
        "summary": "Create bidding report",
        "description": " Calculates RLF by bidding proposals changes report status to \"Active\" status",
        "operationId": "CalculateRollingFactor_By_Bidding_Proposals",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateRollingFactorByBiddingProposalsCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateRollingFactorByBiddingProposalsCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateRollingFactorByBiddingProposalsCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingReports/{id}/unlock": {
      "post": {
        "tags": [
          "BiddingReports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BiddingReportDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BiddingReportDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BiddingReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingReports/{id}/exception": {
      "post": {
        "tags": [
          "BiddingReports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExceptionReportResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExceptionReportResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExceptionReportResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingReports/{customerName}/customer-data": {
      "get": {
        "tags": [
          "BiddingReports"
        ],
        "parameters": [
          {
            "name": "customerName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetBiddingDataCustomerDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetBiddingDataCustomerDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetBiddingDataCustomerDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingReports/calculateSummary": {
      "put": {
        "tags": [
          "Bidding Report"
        ],
        "summary": "Calculate summary for bidding report",
        "description": " Calculates summary for bidding report, calls two stored procedures",
        "operationId": "Calculate_Summary",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateSummaryCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateSummaryCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateSummaryCommand"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingReports/calculateRollingFactor": {
      "put": {
        "tags": [
          "Bidding Report"
        ],
        "summary": "Calculate rolling factor",
        "description": "This route mostly used to return bidding report to base state before any changes",
        "operationId": "calculate_rolling_factor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateRollingFactorCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateRollingFactorCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateRollingFactorCommand"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingReports/summary": {
      "put": {
        "tags": [
          "Bidding Report"
        ],
        "summary": "Update summary",
        "description": "Addional information is only caption that can be updated.",
        "operationId": "summary",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSummaryCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSummaryCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSummaryCommand"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/BiddingReports/export-bidding-data-csv": {
      "get": {
        "tags": [
          "BiddingReports"
        ],
        "parameters": [
          {
            "name": "BiddingReportId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/search": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Search customer bidding data",
        "description": "Performs a paged search over customer bidding data using optional filters and sorting.",
        "operationId": "Customers_Search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomersBiddingDataRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomersBiddingDataRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomersBiddingDataRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersListDtoPagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersListDtoPagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersListDtoPagedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/export": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Export customer bidding report",
        "description": "Generates a customer bidding report using optional filters and sorting and returns it as a file.",
        "operationId": "Customers_ExportReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomersBiddingDataRequestBaseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomersBiddingDataRequestBaseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomersBiddingDataRequestBaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/lookup": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Lookup customers",
        "description": "Returns a lightweight list of customer names for autocomplete based on optional filters.",
        "operationId": "Customers_Lookup",
        "parameters": [
          {
            "name": "SearchValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/name-mappings": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get customer name mappings",
        "description": "Returns existing mappings and distinct bidder names from BiddingData (CustomerName column).",
        "operationId": "Customers_GetNameMappings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerNameMappingsResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerNameMappingsResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerNameMappingsResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/name-mappings/{id}": {
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Update mapping Ariba customer name",
        "description": "Sets AribaCustomerName to a value that must exist in BiddingData.CustomerName (Bidder).",
        "operationId": "Customers_UpdateNameMapping",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerNameMappingRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerNameMappingRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerNameMappingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerNameMappingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerNameMappingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerNameMappingDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Groups/approvers": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get committee member approvers",
        "description": "Returns a list of approvers belonging to the committee member group.",
        "operationId": "Groups_GetCommitteeMemberApprovers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproversDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproversDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproversDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Groups/delegates": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get delegate approvers",
        "description": "Returns a list of approvers belonging to the delegates group.",
        "operationId": "Groups_GetDelegateApprovers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproversDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproversDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproversDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnalyzeShipmentsAndHistoryCommand": {
        "type": "object",
        "properties": {
          "biddingReportId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApprovalHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "reportId": {
            "type": "integer",
            "format": "int32"
          },
          "eventTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "actorUserId": {
            "type": "string",
            "format": "uuid"
          },
          "attempt": {
            "type": "integer",
            "format": "int32"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "isExceptionReport": {
            "type": "boolean"
          },
          "report": {
            "$ref": "#/components/schemas/BiddingReport"
          },
          "eventType": {
            "$ref": "#/components/schemas/EventType"
          },
          "actorUser": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "Approver": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "reportId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isEndorser": {
            "type": "boolean"
          },
          "delegateUserId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "isExceptionReport": {
            "type": "boolean"
          },
          "report": {
            "$ref": "#/components/schemas/BiddingReport"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "delegateUser": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "ApproversDto": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AribaProposalDto": {
        "type": "object",
        "properties": {
          "product": {
            "type": "string",
            "nullable": true
          },
          "period": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "propaneVolumeTonnes": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "propaneTenderPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "butaneVolumeTonnes": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "butaneTenderPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "minEntryPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ansiButaneQuotation": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BiddingDataDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "biddingReportId": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "type": "string",
            "nullable": true
          },
          "bidder": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "string",
            "nullable": true
          },
          "differentialPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bidPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bidVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rankPerPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rollingLiftFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "awardedVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "finalAwardedVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "biddingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reportDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BiddingHistoryAnalysis": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "biddingReportId": {
            "type": "integer",
            "format": "int32"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "biddingMonth": {
            "type": "string",
            "nullable": true
          },
          "biddingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "takenPR": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "takenBT": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "oneMonthPerformanceScore": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "finalAwardedPR": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "finalAwardedBT": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "additionalVolumePR": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "additionalVolumeBT": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "volumePR": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "volumeBT": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "biddingReport": {
            "$ref": "#/components/schemas/BiddingReport"
          }
        },
        "additionalProperties": false
      },
      "BiddingHistoryAnalysisDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "biddingReportId": {
            "type": "integer",
            "format": "int32"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "biddingMonth": {
            "type": "string",
            "nullable": true
          },
          "biddingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "takenPR": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "takenBT": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "oneMonthPerformanceScore": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "finalAwardedPR": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "finalAwardedBT": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "additionalVolumePR": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "additionalVolumeBT": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "volumePR": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "volumeBT": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "biddingReport": {
            "$ref": "#/components/schemas/BiddingReport"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BiddingReport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "reportName": {
            "type": "string",
            "nullable": true
          },
          "reportMonth": {
            "type": "string",
            "nullable": true
          },
          "reportYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reportDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "totalButaneVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalPropaneVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weightedAvgButanePrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weightedAvgPropanePrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weightedTotalPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "biddingHistoryAnalysis": {
            "$ref": "#/components/schemas/BiddingHistoryAnalysis"
          },
          "filePath": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "totalVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isExceptionReport": {
            "type": "boolean"
          },
          "approvers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Approver"
            },
            "nullable": true
          },
          "approvalHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalHistory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BiddingReportDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "reportName": {
            "type": "string",
            "nullable": true
          },
          "reportMonth": {
            "type": "string",
            "nullable": true
          },
          "reportYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reportDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "totalButaneVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalPropaneVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weightedAvgButanePrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weightedAvgPropanePrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weightedTotalPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isExceptionReport": {
            "type": "boolean"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BiddingReportSummaryDto": {
        "type": "object",
        "properties": {
          "caption": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "biddingReportId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CalculateRollingFactorByBiddingProposalsCommand": {
        "type": "object",
        "properties": {
          "biddingReportId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CalculateRollingFactorCommand": {
        "type": "object",
        "properties": {
          "biddingReportId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CalculateSummaryCommand": {
        "type": "object",
        "properties": {
          "biddingReportId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CommentDto": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateBiddingReportCommand": {
        "type": "object",
        "properties": {
          "reportDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateExceptionReportResultDto": {
        "type": "object",
        "properties": {
          "biddingReportId": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerNameMappingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "ecCustomerName": {
            "type": "string",
            "nullable": true
          },
          "aribaCustomerName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerNameMappingsResultDto": {
        "type": "object",
        "properties": {
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerNameMappingDto"
            },
            "nullable": true
          },
          "availableCustomerNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomersBiddingDataRequestBaseDto": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterDescriptor"
            },
            "nullable": true
          },
          "sorting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortDescriptor"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomersBiddingDataRequestDto": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterDescriptor"
            },
            "nullable": true
          },
          "sorting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortDescriptor"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagedRequest"
          }
        },
        "additionalProperties": false
      },
      "CustomersListDto": {
        "type": "object",
        "properties": {
          "product": {
            "type": "string",
            "nullable": true
          },
          "bidder": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "month": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bidVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bidPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "finalAwardedVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "volumeTaken": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "additionalVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rollingLiftFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomersListDtoPagedResult": {
        "required": [
          "items",
          "pageNumber",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomersListDto"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "hasPrevious": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNext": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EventType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "approvalHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalHistory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FilterDescriptor": {
        "required": [
          "field"
        ],
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "nullable": true
          },
          "operator": {
            "$ref": "#/components/schemas/FilterOperator"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FilterOperator": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "GetBiddingDataCustomerDto": {
        "type": "object",
        "properties": {
          "product": {
            "type": "string",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "month": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bidVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bidPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "finalAwardedVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "takenVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "additionalVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rollingLiftFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "biddingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetBiddingReportDetailsResponse": {
        "type": "object",
        "properties": {
          "reportFilePath": {
            "type": "string",
            "nullable": true
          },
          "reportFileName": {
            "type": "string",
            "nullable": true
          },
          "biddingData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BiddingDataDto"
            },
            "nullable": true
          },
          "summaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BiddingReportSummaryDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedRequest": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "includeTotal": {
            "type": "boolean"
          },
          "all": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ReportApproversDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isEndorser": {
            "type": "boolean"
          },
          "delegateUserId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "delegateName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetApproversDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isEndorser": {
            "type": "boolean"
          },
          "delegateUserId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SortDescriptor": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "nullable": true
          },
          "direction": {
            "$ref": "#/components/schemas/SortDirection"
          }
        },
        "additionalProperties": false
      },
      "SortDirection": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "UpdateBiddingDataForActiveReportCommand": {
        "type": "object",
        "properties": {
          "biddingReportId": {
            "type": "integer",
            "format": "int32"
          },
          "biddingData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateBiddingDataForActiveReportDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBiddingDataForActiveReportDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "finalAwardedVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBiddingDataForExceptionReportCommand": {
        "type": "object",
        "properties": {
          "exceptionReportId": {
            "type": "integer",
            "format": "int32"
          },
          "biddingData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateBiddingDataForExceptionReportDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBiddingDataForExceptionReportDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bidPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bidVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "awardedVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "finalAwardedVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBiddingDataStatusCommand": {
        "type": "object",
        "properties": {
          "biddingReportId": {
            "type": "integer",
            "format": "int32"
          },
          "biddingDataId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "dateFrom": {
            "type": "string",
            "format": "date-time"
          },
          "dateTo": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UpdateBiddingHistoryAnalysisCommand": {
        "type": "object",
        "properties": {
          "biddingReportId": {
            "type": "integer",
            "format": "int32"
          },
          "biddingHistoryAnalysis": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateBiddingHistoryAnalysisDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBiddingHistoryAnalysisDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "additionalVolumePR": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "additionalVolumeBT": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBiddingHistoryAnalysisStatusCommand": {
        "type": "object",
        "properties": {
          "biddingReportId": {
            "type": "integer",
            "format": "int32"
          },
          "historyAnalysisId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "dateFrom": {
            "type": "string",
            "format": "date-time"
          },
          "dateTo": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomerNameMappingRequest": {
        "type": "object",
        "properties": {
          "newAribaCustomerName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateSummaryCommand": {
        "type": "object",
        "properties": {
          "biddingReportId": {
            "type": "integer",
            "format": "int32"
          },
          "additionalInformation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "approverRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Approver"
            },
            "nullable": true
          },
          "delegateApproverRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Approver"
            },
            "nullable": true
          },
          "approvalHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalHistory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "description": "Azure Entra ID (Implicit flow)",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/fd799da1-bfc1-4234-a91c-72b3a1cb9e26/oauth2/v2.0/authorize",
            "scopes": {
              "https://tcobid-test.azure.chevron.com/user_impersonation": "user_impersonation"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": [
        "https://tcobid-test.azure.chevron.com/user_impersonation"
      ]
    }
  ]
}